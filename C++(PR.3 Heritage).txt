//Q.1
#include <iostream>
using namespace std;


class Shape
{
private:
	double width, height;
public:
	//  constructor
	Shape(double newWidth, double newHeight){
		this->width=newWidth;
		this->height=newHeight;
	}
	double getWidth() 
	{
		return width;
	}
	double getHeight() 
	{
		return height;
	}
};


class Rectangle: public Shape
{
public:
   
    Rectangle(double width, double height):Shape(width,height)
    {


    }
    double area()
    {
        return (getWidth()*getHeight());
    }
};


class Triangle: public Shape
{
public:
    Triangle(double base, double height): Shape(base,height)
    {


    }
    double area()
    {
        return (getWidth()*getHeight())/2.0;
    }
};


int main ()
{
	Rectangle rectangle(5.0,3.0);
	Triangle triangle(2.0,5.0);
	cout <<"Area of rectangle is: "<< rectangle.area() << endl;
	cout <<"Area of triangle is: "<< triangle.area() << endl;
}

/*Q.2 Write a Program to demonstrate an example of hierarchical inheritance to get the square and cube of a number.*/
#include<iostream>
using namespace std;
class NUM{
	protected :
		int num;
		public :
			void setData(int num){
			 	this->num=num;
			}
};
class Square : public NUM{
	public:
		int getDataS(){
				return num*num;
		}
};
class Cube : public NUM{
	public :
		int getDataC(){
			return num*num*num;
		}
};
int main(){
	Square s;
	Cube c;
	int n;
	cout<<"Enter any Number :";
	cin>>n;
	
	s.setData(n);
	c.setData(n);
	cout<<"square : "<<s.getDataS()<<endl;
	cout<<"Cube : "<<c.getDataC()<<endl;
}
